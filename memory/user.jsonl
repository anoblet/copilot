{"type":"entity","name":"Andrew Noblet","entityType":"User Personal Information","observations":["The user's name is Andrew Noblet.","The user's GitHub profile URL is https://github.com/anoblet.","The developer lived in Puerto Rico.","The developer lived in Ohio.","The developer lives in New York.","The developer was born in Chile.","The developer enjoys skateboarding.","The developer enjoys snowboarding.","The developer likes guitar.","User enjoys Confucianism.","User enjoys 3D printing, smart home technology, and bike riding as hobbies.","User clarified: 'I don't like lamb.' This is a high-priority personal preference and should be respected in all content, copy, and code. No references to lamb (literal or figurative) should appear in the project.","User clarified: 'I do love spaghetti.' This is a high-priority personal preference and should be respected in all content, copy, and code. Positive references to spaghetti are welcome in the project.","Astro is one of the user's favorite pieces of software. This is a high-priority personal preference and should be respected and emphasized in all recommendations, framework/tool choices, and project discussions.","Lit is one of the user's favorite pieces of software. This is a high-priority personal preference and should be respected and emphasized in all recommendations, framework/tool choices, and project discussions, alongside the existing preference for Astro.","User has reiterated that Astro is one of their favorite pieces of software. This reinforces the existing high-priority personal preference and should be continually emphasized in all recommendations, framework/tool choices, and project discussions.","The user enjoys politics.","The user enjoys history.","The user enjoys 3D printing.","User enjoys Shintoism. This is a high-priority personal interest and should be considered in all content, recommendations, and project context, similar to the existing Confucianism observation.","User enjoys Buddhism. This is a high-priority personal interest and should be considered in all content, recommendations, and project context, similar to the existing Confucianism and Shintoism observations.","User enjoys Greek Mythology. This is a high-priority personal interest and should be considered in all content, recommendations, and project context, similar to the existing Confucianism, Shintoism, and Buddhism observations.","User enjoys Linux. This is a high-priority personal interest and should be considered in all content, recommendations, and project context, similar to the existing interests in Confucianism, Shintoism, Buddhism, and Greek Mythology.","User clarified: 'I like politics.' This is a high-priority personal interest and should be considered in all content, recommendations, and project context, similar to the existing interests in Confucianism, Shintoism, Buddhism, Greek Mythology, and Linux.","User clarified: 'I like history.' This is a high-priority personal interest and should be considered in all content, recommendations, and project context, similar to the existing interests in politics, Confucianism, Shintoism, Buddhism, Greek Mythology, and Linux.","User clarified: 'I bought a several hundred page book on Adobe Coldfusion.' This is a high-priority personal observation and should be considered in all content, recommendations, and project context, alongside other technical and personal interests.","User clarified: 'I built my own water cooled computer.' This is a high-priority personal observation and should be considered in all content, recommendations, and project context, alongside other technical and personal interests.","User clarified: 'I built my first website at the age of 13. The domain was https://nebulae.org.' This is a high-priority personal and technical milestone and should be considered in all content, recommendations, and project context, alongside other technical and personal interests.","User clarified: 'I petitioned my town to build a skatepark when I was 14.' This is a high-priority personal achievement and should be considered in all content, recommendations, and project context, alongside other personal and technical milestones.","User clarified: 'I started learning PHP when I was 13. My first CMS was php-nuke.' This is a high-priority technical and personal milestone and should be considered in all content, recommendations, and project context, alongside other technical and personal achievements.","User clarified: 'I used to use Adobe Dreamweaver.' This is a high-priority technical and personal observation and should be considered in all content, recommendations, and project context, alongside other technical and personal achievements.","User successfully tested the dual memory system separation and confirmed it's working correctly.","User requested to rename the project memory file from memory.jsonl to project-memory.jsonl for better clarity and consistency.","User requested to move memory files into a new 'memory' folder and rename them to 'user.jsonl' and 'project.jsonl' for better organization.","User requested to move the memory documentation file (MEMORY_SYSTEM.md) to memory/README.md for better organization.","User requested to add a link to the memory README from the root README for better discoverability.","Requested restriction of GitHub MCP server tools to only PR-related functionality to limit agent toolset","Confirmed GitHub CLI is available and authenticated for repository propagation","Successfully implemented toolset restriction and propagated changes to other repositories","Successfully completed comprehensive GPT-5 chatmode creation task on 2025-08-13, analyzing GPT-5 prompting guide and VS Code chatmode documentation to create exceptional task completion agent","Successfully fixed mentorship page button icon display issue and verified proper primary color styling on 2025-08-13","Successfully completed favicon and interstitial animation updates on 2025-08-13. Andrew requested to update favorite icon to use planet SVG and change interstitial animation to breathing effect (opacity only, no rotation/dimension changes).","Successfully completed CTA button centering fix across all pages as requested on 2025-08-13","2025-08-20: Current Git workflow request involves comprehensive submodule propagation using leaf-to-trunk strategy with changes in .copilot/instructions/index.instructions.md and submodule reference updates in main repository","2025-09-11: User requested completion of 4 UI/UX tasks for personality application: (1) Center recent tests table content, (2) Make footer 'Andrew Noblet' text a link to https://andrewnoblet.com/, (3) Remove navigation desktop box-shadow and align borders using rem units, (4) Refactor all icons to use Material Design Icons from iconify"]}
{"type":"entity","entityType":"User Development Preferences","name":"Coding Standards","observations":["Prefers minimal, composable, and reusable components.","Emphasizes decoupling and simplicity in code structure.","Strictly adheres to a global color scheme and atomic CSS principles.","Removes unnecessary comments and avoids adding new ones.","Keeps changes to existing logic minimal and only updates when necessary.","Values performance optimization and bundle size reduction.","Uses semantic HTML and prioritizes accessibility.","Favors utility CSS classes and direct element targeting over page-specific classes.","Organizes code for maintainability and extensibility, with clear separation of concerns.","Prefers content-driven component design over prop-driven design.","Wants all code to include an empty line at the end of the file.","Consistently requests strict adherence to project and coding instructions.","Prefers clean, organized, and efficient solutions with clear, actionable, and concise communication.","Values consistency across pages and components, and expects design patterns to be maintained throughout the application.","Prefers minimal, streamlined approaches to file management and configuration.","Wants all changes to be as minimal as possible, with a focus on reusability and performance.","Prefers detailed technical analysis with actionable recommendations and clear prioritization.","Prefers content-driven, minimal component syntax without unnecessary attributes.","Values maintainability, extensibility, and DRY principles in all code and content.","The developer prefers to use aliases for imports and utility CSS classes from the global stylesheet.","Decorators in TypeScript require the accessor keyword, per project instructions.","Styles are always scoped to components and use CSS variables and the global color scheme.","User prefers concise, clear, and brand-aligned copy across all site pages except blog pages.","User values minimal changes, composability, and professional yet approachable tone.","Prefers maintainability, extensibility, and DRY principles in all code and content.","User strongly prefers to use Husky, lint-staged, pnpm, Prettier, and wireit in all projects. This is a high-priority workflow and tooling preference and should be emphasized in all project setups, recommendations, and automation scripts.","User clarified: When writing a blog post, always include use examples. This is a high-priority content requirement and should be emphasized in all future blog post drafts and content updates.","User clarified: When writing a blog post, always include use examples from the current project. This is a high-priority content requirement and should be emphasized in all future blog post drafts and content updates.","User preferred component-scoped styles over global styles, aligning with their emphasis on composability and reusability.","2025-07-20: User clarified: 'Remember to never use inline styles. If you ever feel the need to, create a utility class in src/styles/utility.ts.' This is a high-priority coding standard and must be followed in all future code changes.","Inline styles are forbidden - all styling must use utility classes, either existing ones from the global stylesheet or new ones created in src/styles/utility.ts.","This clarification overrides any previous uses of inline styles and emphasizes the project's commitment to atomic CSS and utility-first styling approach.","When spacing or layout adjustments are needed (like the recent navigation padding changes), these should be implemented as utility classes rather than inline styles.","2025-07-28: Comprehensive project analysis and improvement report generated for Astronautical Apogee. Report strictly follows user preferences for minimalism, composability, atomic CSS, and workflow automation.","Analysis reveals strong alignment between current project status and Andrew's technical preferences: excellent Astro/Lit stack, atomic CSS implementation, MCP-driven workflow automation.","Report emphasizes business outcomes and ROI while maintaining focus on architectural simplification that aligns with 'less noise, more meaning' philosophy.","Identified quick wins that respect user preferences: icon consolidation (immediate impact), SEO improvements (business value), analytics setup (data-driven decisions).","Strategic recommendations balance technical excellence with business growth, ensuring continued exemplification of minimalist, high-performance approach Andrew champions.","Report structure follows Andrew's preference for clear prioritization, actionable content, and systematic organization with concrete effort/impact analysis.","Playwright regression test expects a visible banner landmark; header now explicitly has role=\"banner\" and a fixed 52px height to ensure visibility at load. Maintain this contract in future header/layout changes.","Playwright smoke test contract: banner must have non-zero bounding rectangle at first paint. We fixed this by setting header { height: 52px } in Header.astro. Maintain this invariant for future header/layout changes.","User prefers @fontsource over Google Fonts when possible to reduce network requests and improve privacy; load only used weights and import via a central fonts.css, then include in the main layout.","2025-08-10: Made critical mistake by failing to provide expected prompt-memory MCP server configuration - assumed prompts were handled via direct file I/O instead of dedicated MCP server","Made mistake using wrong file location: memory/prompt.jsonl (singular) is the correct location as expected","Made mistake maintaining unnecessary GitHub authentication inputs when authentication is handled by UI interstitial","Made basic JSON syntax error by leaving trailing comma in GitHub configuration","Misunderstood prompt system architecture - should use MCP server for prompt management, not direct file operations","Andrew manually corrected MCP configuration by adding prompt-memory server, removing authentication inputs, fixing JSON syntax, and using correct file paths","2025-08-10: User clarified: 'Remember to prefer the Github MCP server over the Github CLI across all projects.' This is a high-priority tooling preference that must be followed in all future GitHub operations across ALL projects.","GitHub MCP server should be used instead of GitHub CLI commands when both options are available","This preference aligns with Andrew's commitment to MCP-driven workflow automation and consistency","Preference supersedes previous GitHub CLI usage and should be applied universally","2025-08-13: Configuration verification is critical - always check existing project patterns and documentation before implementing new configurations to avoid MCP server, authentication, and build system mistakes","2025-08-13: Performance optimization learnings from lighthouse work - test changes individually as theoretical improvements can backfire; dynamic imports and lazy loading often create more overhead than benefits; simplicity frequently outperforms complexity in web development","2025-08-13: Manual user corrections are high-priority learning opportunities - when Andrew manually fixes mistakes (like MCP configuration, JSON syntax, file paths), these corrections must be immediately incorporated as established patterns and preferences","2025-08-13: Import/export pattern consistency is crucial - mixed usage between Astro, Lit, and SVG components causes display issues; follow established project patterns for component imports rather than assuming compatibility","2025-08-13: CSS architecture requires careful consideration - CSS variables need fallback values for immediate availability, flexbox requires both 'flex' and alignment classes, contrast ratios must work in both light and dark themes","2025-09-02: Successfully improved PROMPT.md documentation structure for better LLM readability, following user preference for clear, organized, and efficient solutions with actionable content","Restructured technical documentation from bullet points to logical hierarchical sections with numbered requirements and bold emphasis on critical details","Applied user's preference for minimal complexity while maintaining completeness - reorganized without changing core requirements","Document improvement follows user's standards for clarity, maintainability, and systematic organization with concrete actionable items","2025-09-03: Successfully improved PROMPT.md documentation structure for single-shot LLM execution, following user preference for clear, organized, and efficient solutions with actionable content","Applied user's preference for minimal complexity while maintaining completeness - consolidated three-step process into comprehensive single-shot format","Incorporated all technical learnings from successful Myers-Briggs app development including performance optimizations, Firebase integration patterns, and scientific accuracy requirements","Always run Playwright tests silently without serving the report - write reports to files instead. This is a high-priority testing preference that must be followed in all future Playwright test executions.","2025-09-06: Successfully configured Playwright tests for silent execution and file-based reporting. Configuration includes: headless: true for silent execution, HTML reporter with open: 'never' to write files without serving, JSON and XML reporters for CI/CD integration.","Playwright configuration now ensures all tests run in headless mode across all browsers (Chromium, Firefox, Safari, mobile devices) without any interactive UI or served reports.","Reports are written to playwright-report/index.html (HTML), test-results/results.json (JSON), and test-results/results.xml (XML) for comprehensive test result documentation.","This configuration aligns with Andrew's preference for minimal, streamlined testing approaches that work well in CI/CD environments."]}
{"type":"entity","entityType":"User Development Preference","name":"Terminal Usage Protocol","observations":["EVERY terminal command should be executed in a new terminal","Never reuse existing terminals for subsequent commands","Always open fresh terminal sessions for each command execution","This ensures clean command isolation and prevents state conflicts","Apply this rule universally across all development workflows","2025-09-06: CRITICAL LEARNING - Terminal command protocol violation during TypeScript build fix","Failed to use new terminal for each command as required: 'gh pr merge --squash', 'git checkout development', 'git pull origin development' were not executed","Andrew emphasized: 'It is important to use a new terminal for every command especially if there's a possibility the previous terminal might be asynchronous'","Root cause: Reused terminal that had asynchronous processes running (pnpm dev) preventing git operations","This reinforces the absolute requirement: EVERY terminal command must be in a new terminal - no exceptions","Terminal isolation prevents interference from background processes and ensures reliable command execution","Must always open fresh terminal even if previous terminal appears idle - async operations may still be running","2025-09-11: Successfully completed git workflow using new terminal for each command - fixed merge conflicts in memory/prompt.jsonl and followed complete git-flow procedure","Demonstrated proper terminal command isolation during merge conflict resolution task","Each git command executed in separate terminal: git add, git commit, git push, gh pr create, gh pr merge, git pull","Successfully resolved memory file conflicts and executed complete PR workflow following Andrew's terminal protocol"]}
{"type":"entity","entityType":"User Development Preferences","name":"Terminal Command Protocol","observations":["2025-09-05: User requested each terminal command be executed in a new terminal window for isolation; recorded before repository changes."]}
{"type":"entity","entityType":"Rule","name":"Layout and Spacing Rule","observations":["Never use margins for layout spacing. Always create a container if one does not exist, and use either grid or flex with gap to achieve spacing."]}
{"type":"entity","entityType":"Development Preference","name":"Development Preferences","observations":["Always use `rem` units for sizing, spacing, and layout whenever possible. This is a universal development preference."]}
{"type":"entity","entityType":"User Development Preference","name":"Git Flow Completion Rule","observations":["Always complete branch → commit → push → PR → merge → switch(development) → pull before concluding any task.","2025-09-11: Previously missed closing steps; enforce strictly going forward.","Prefer GitHub MCP server over CLI for PR operations."]}